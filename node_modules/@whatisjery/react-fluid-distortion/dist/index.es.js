var Cr = Object.defineProperty;
var _r = (l, i, n) => i in l ? Cr(l, i, { enumerable: !0, configurable: !0, writable: !0, value: n }) : l[i] = n;
var qe = (l, i, n) => (_r(l, typeof i != "symbol" ? i + "" : i, n), n);
import Ke, { forwardRef as Tr, useMemo as te, useEffect as Te, useRef as J, useCallback as fe } from "react";
import { useThree as ve, useFrame as Er, createPortal as Sr } from "@react-three/fiber";
import * as T from "three";
import { Color as Dr, Vector3 as Ee, Uniform as Y, ShaderMaterial as M, Texture as k, Vector2 as j, Scene as Fr, Camera as Pr } from "three";
import { Effect as Or } from "postprocessing";
import { useFBO as de } from "@react-three/drei";
import { useControls as kr, button as Br } from "leva";
var _e = { exports: {} }, ee = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Xe;
function jr() {
  if (Xe)
    return ee;
  Xe = 1;
  var l = Ke, i = Symbol.for("react.element"), n = Symbol.for("react.fragment"), c = Object.prototype.hasOwnProperty, m = l.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, R = { key: !0, ref: !0, __self: !0, __source: !0 };
  function d(S, g, V) {
    var C, B = {}, A = null, W = null;
    V !== void 0 && (A = "" + V), g.key !== void 0 && (A = "" + g.key), g.ref !== void 0 && (W = g.ref);
    for (C in g)
      c.call(g, C) && !R.hasOwnProperty(C) && (B[C] = g[C]);
    if (S && S.defaultProps)
      for (C in g = S.defaultProps, g)
        B[C] === void 0 && (B[C] = g[C]);
    return { $$typeof: i, type: S, key: A, ref: W, props: B, _owner: m.current };
  }
  return ee.Fragment = n, ee.jsx = d, ee.jsxs = d, ee;
}
var re = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Je;
function Vr() {
  return Je || (Je = 1, process.env.NODE_ENV !== "production" && function() {
    var l = Ke, i = Symbol.for("react.element"), n = Symbol.for("react.portal"), c = Symbol.for("react.fragment"), m = Symbol.for("react.strict_mode"), R = Symbol.for("react.profiler"), d = Symbol.for("react.provider"), S = Symbol.for("react.context"), g = Symbol.for("react.forward_ref"), V = Symbol.for("react.suspense"), C = Symbol.for("react.suspense_list"), B = Symbol.for("react.memo"), A = Symbol.for("react.lazy"), W = Symbol.for("react.offscreen"), K = Symbol.iterator, I = "@@iterator";
    function N(e) {
      if (e === null || typeof e != "object")
        return null;
      var r = K && e[K] || e[I];
      return typeof r == "function" ? r : null;
    }
    var U = l.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function y(e) {
      {
        for (var r = arguments.length, t = new Array(r > 1 ? r - 1 : 0), a = 1; a < r; a++)
          t[a - 1] = arguments[a];
        ne("error", e, t);
      }
    }
    function ne(e, r, t) {
      {
        var a = U.ReactDebugCurrentFrame, f = a.getStackAddendum();
        f !== "" && (r += "%s", t = t.concat([f]));
        var v = t.map(function(s) {
          return String(s);
        });
        v.unshift("Warning: " + r), Function.prototype.apply.call(console[e], console, v);
      }
    }
    var x = !1, G = !1, pe = !1, Z = !1, L = !1, D;
    D = Symbol.for("react.module.reference");
    function p(e) {
      return !!(typeof e == "string" || typeof e == "function" || e === c || e === R || L || e === m || e === V || e === C || Z || e === W || x || G || pe || typeof e == "object" && e !== null && (e.$$typeof === A || e.$$typeof === B || e.$$typeof === d || e.$$typeof === S || e.$$typeof === g || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      e.$$typeof === D || e.getModuleId !== void 0));
    }
    function E(e, r, t) {
      var a = e.displayName;
      if (a)
        return a;
      var f = r.displayName || r.name || "";
      return f !== "" ? t + "(" + f + ")" : t;
    }
    function w(e) {
      return e.displayName || "Context";
    }
    function F(e) {
      if (e == null)
        return null;
      if (typeof e.tag == "number" && y("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof e == "function")
        return e.displayName || e.name || null;
      if (typeof e == "string")
        return e;
      switch (e) {
        case c:
          return "Fragment";
        case n:
          return "Portal";
        case R:
          return "Profiler";
        case m:
          return "StrictMode";
        case V:
          return "Suspense";
        case C:
          return "SuspenseList";
      }
      if (typeof e == "object")
        switch (e.$$typeof) {
          case S:
            var r = e;
            return w(r) + ".Consumer";
          case d:
            var t = e;
            return w(t._context) + ".Provider";
          case g:
            return E(e, e.render, "ForwardRef");
          case B:
            var a = e.displayName || null;
            return a !== null ? a : F(e.type) || "Memo";
          case A: {
            var f = e, v = f._payload, s = f._init;
            try {
              return F(s(v));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var P = Object.assign, $ = 0, ae, Se, De, Fe, Pe, Oe, ke;
    function Be() {
    }
    Be.__reactDisabledLog = !0;
    function Ze() {
      {
        if ($ === 0) {
          ae = console.log, Se = console.info, De = console.warn, Fe = console.error, Pe = console.group, Oe = console.groupCollapsed, ke = console.groupEnd;
          var e = {
            configurable: !0,
            enumerable: !0,
            value: Be,
            writable: !0
          };
          Object.defineProperties(console, {
            info: e,
            log: e,
            warn: e,
            error: e,
            group: e,
            groupCollapsed: e,
            groupEnd: e
          });
        }
        $++;
      }
    }
    function Qe() {
      {
        if ($--, $ === 0) {
          var e = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: P({}, e, {
              value: ae
            }),
            info: P({}, e, {
              value: Se
            }),
            warn: P({}, e, {
              value: De
            }),
            error: P({}, e, {
              value: Fe
            }),
            group: P({}, e, {
              value: Pe
            }),
            groupCollapsed: P({}, e, {
              value: Oe
            }),
            groupEnd: P({}, e, {
              value: ke
            })
          });
        }
        $ < 0 && y("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var me = U.ReactCurrentDispatcher, ge;
    function oe(e, r, t) {
      {
        if (ge === void 0)
          try {
            throw Error();
          } catch (f) {
            var a = f.stack.trim().match(/\n( *(at )?)/);
            ge = a && a[1] || "";
          }
        return `
` + ge + e;
      }
    }
    var ye = !1, ie;
    {
      var er = typeof WeakMap == "function" ? WeakMap : Map;
      ie = new er();
    }
    function je(e, r) {
      if (!e || ye)
        return "";
      {
        var t = ie.get(e);
        if (t !== void 0)
          return t;
      }
      var a;
      ye = !0;
      var f = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var v;
      v = me.current, me.current = null, Ze();
      try {
        if (r) {
          var s = function() {
            throw Error();
          };
          if (Object.defineProperty(s.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(s, []);
            } catch (z) {
              a = z;
            }
            Reflect.construct(e, [], s);
          } else {
            try {
              s.call();
            } catch (z) {
              a = z;
            }
            e.call(s.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (z) {
            a = z;
          }
          e();
        }
      } catch (z) {
        if (z && a && typeof z.stack == "string") {
          for (var u = z.stack.split(`
`), _ = a.stack.split(`
`), h = u.length - 1, b = _.length - 1; h >= 1 && b >= 0 && u[h] !== _[b]; )
            b--;
          for (; h >= 1 && b >= 0; h--, b--)
            if (u[h] !== _[b]) {
              if (h !== 1 || b !== 1)
                do
                  if (h--, b--, b < 0 || u[h] !== _[b]) {
                    var O = `
` + u[h].replace(" at new ", " at ");
                    return e.displayName && O.includes("<anonymous>") && (O = O.replace("<anonymous>", e.displayName)), typeof e == "function" && ie.set(e, O), O;
                  }
                while (h >= 1 && b >= 0);
              break;
            }
        }
      } finally {
        ye = !1, me.current = v, Qe(), Error.prepareStackTrace = f;
      }
      var q = e ? e.displayName || e.name : "", He = q ? oe(q) : "";
      return typeof e == "function" && ie.set(e, He), He;
    }
    function rr(e, r, t) {
      return je(e, !1);
    }
    function tr(e) {
      var r = e.prototype;
      return !!(r && r.isReactComponent);
    }
    function ue(e, r, t) {
      if (e == null)
        return "";
      if (typeof e == "function")
        return je(e, tr(e));
      if (typeof e == "string")
        return oe(e);
      switch (e) {
        case V:
          return oe("Suspense");
        case C:
          return oe("SuspenseList");
      }
      if (typeof e == "object")
        switch (e.$$typeof) {
          case g:
            return rr(e.render);
          case B:
            return ue(e.type, r, t);
          case A: {
            var a = e, f = a._payload, v = a._init;
            try {
              return ue(v(f), r, t);
            } catch {
            }
          }
        }
      return "";
    }
    var le = Object.prototype.hasOwnProperty, Ve = {}, Ue = U.ReactDebugCurrentFrame;
    function se(e) {
      if (e) {
        var r = e._owner, t = ue(e.type, e._source, r ? r.type : null);
        Ue.setExtraStackFrame(t);
      } else
        Ue.setExtraStackFrame(null);
    }
    function nr(e, r, t, a, f) {
      {
        var v = Function.call.bind(le);
        for (var s in e)
          if (v(e, s)) {
            var u = void 0;
            try {
              if (typeof e[s] != "function") {
                var _ = Error((a || "React class") + ": " + t + " type `" + s + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof e[s] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw _.name = "Invariant Violation", _;
              }
              u = e[s](r, s, a, t, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (h) {
              u = h;
            }
            u && !(u instanceof Error) && (se(f), y("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", a || "React class", t, s, typeof u), se(null)), u instanceof Error && !(u.message in Ve) && (Ve[u.message] = !0, se(f), y("Failed %s type: %s", t, u.message), se(null));
          }
      }
    }
    var ar = Array.isArray;
    function he(e) {
      return ar(e);
    }
    function or(e) {
      {
        var r = typeof Symbol == "function" && Symbol.toStringTag, t = r && e[Symbol.toStringTag] || e.constructor.name || "Object";
        return t;
      }
    }
    function ir(e) {
      try {
        return Le(e), !1;
      } catch {
        return !0;
      }
    }
    function Le(e) {
      return "" + e;
    }
    function Ae(e) {
      if (ir(e))
        return y("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", or(e)), Le(e);
    }
    var Q = U.ReactCurrentOwner, ur = {
      key: !0,
      ref: !0,
      __self: !0,
      __source: !0
    }, Ie, ze, xe;
    xe = {};
    function lr(e) {
      if (le.call(e, "ref")) {
        var r = Object.getOwnPropertyDescriptor(e, "ref").get;
        if (r && r.isReactWarning)
          return !1;
      }
      return e.ref !== void 0;
    }
    function sr(e) {
      if (le.call(e, "key")) {
        var r = Object.getOwnPropertyDescriptor(e, "key").get;
        if (r && r.isReactWarning)
          return !1;
      }
      return e.key !== void 0;
    }
    function cr(e, r) {
      if (typeof e.ref == "string" && Q.current && r && Q.current.stateNode !== r) {
        var t = F(Q.current.type);
        xe[t] || (y('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', F(Q.current.type), e.ref), xe[t] = !0);
      }
    }
    function fr(e, r) {
      {
        var t = function() {
          Ie || (Ie = !0, y("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", r));
        };
        t.isReactWarning = !0, Object.defineProperty(e, "key", {
          get: t,
          configurable: !0
        });
      }
    }
    function vr(e, r) {
      {
        var t = function() {
          ze || (ze = !0, y("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", r));
        };
        t.isReactWarning = !0, Object.defineProperty(e, "ref", {
          get: t,
          configurable: !0
        });
      }
    }
    var dr = function(e, r, t, a, f, v, s) {
      var u = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: i,
        // Built-in properties that belong on the element
        type: e,
        key: r,
        ref: t,
        props: s,
        // Record the component responsible for creating this element.
        _owner: v
      };
      return u._store = {}, Object.defineProperty(u._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: !1
      }), Object.defineProperty(u, "_self", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: a
      }), Object.defineProperty(u, "_source", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: f
      }), Object.freeze && (Object.freeze(u.props), Object.freeze(u)), u;
    };
    function pr(e, r, t, a, f) {
      {
        var v, s = {}, u = null, _ = null;
        t !== void 0 && (Ae(t), u = "" + t), sr(r) && (Ae(r.key), u = "" + r.key), lr(r) && (_ = r.ref, cr(r, f));
        for (v in r)
          le.call(r, v) && !ur.hasOwnProperty(v) && (s[v] = r[v]);
        if (e && e.defaultProps) {
          var h = e.defaultProps;
          for (v in h)
            s[v] === void 0 && (s[v] = h[v]);
        }
        if (u || _) {
          var b = typeof e == "function" ? e.displayName || e.name || "Unknown" : e;
          u && fr(s, b), _ && vr(s, b);
        }
        return dr(e, u, _, f, a, Q.current, s);
      }
    }
    var be = U.ReactCurrentOwner, Ye = U.ReactDebugCurrentFrame;
    function H(e) {
      if (e) {
        var r = e._owner, t = ue(e.type, e._source, r ? r.type : null);
        Ye.setExtraStackFrame(t);
      } else
        Ye.setExtraStackFrame(null);
    }
    var Re;
    Re = !1;
    function we(e) {
      return typeof e == "object" && e !== null && e.$$typeof === i;
    }
    function Me() {
      {
        if (be.current) {
          var e = F(be.current.type);
          if (e)
            return `

Check the render method of \`` + e + "`.";
        }
        return "";
      }
    }
    function mr(e) {
      {
        if (e !== void 0) {
          var r = e.fileName.replace(/^.*[\\\/]/, ""), t = e.lineNumber;
          return `

Check your code at ` + r + ":" + t + ".";
        }
        return "";
      }
    }
    var $e = {};
    function gr(e) {
      {
        var r = Me();
        if (!r) {
          var t = typeof e == "string" ? e : e.displayName || e.name;
          t && (r = `

Check the top-level render call using <` + t + ">.");
        }
        return r;
      }
    }
    function We(e, r) {
      {
        if (!e._store || e._store.validated || e.key != null)
          return;
        e._store.validated = !0;
        var t = gr(r);
        if ($e[t])
          return;
        $e[t] = !0;
        var a = "";
        e && e._owner && e._owner !== be.current && (a = " It was passed a child from " + F(e._owner.type) + "."), H(e), y('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', t, a), H(null);
      }
    }
    function Ne(e, r) {
      {
        if (typeof e != "object")
          return;
        if (he(e))
          for (var t = 0; t < e.length; t++) {
            var a = e[t];
            we(a) && We(a, r);
          }
        else if (we(e))
          e._store && (e._store.validated = !0);
        else if (e) {
          var f = N(e);
          if (typeof f == "function" && f !== e.entries)
            for (var v = f.call(e), s; !(s = v.next()).done; )
              we(s.value) && We(s.value, r);
        }
      }
    }
    function yr(e) {
      {
        var r = e.type;
        if (r == null || typeof r == "string")
          return;
        var t;
        if (typeof r == "function")
          t = r.propTypes;
        else if (typeof r == "object" && (r.$$typeof === g || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        r.$$typeof === B))
          t = r.propTypes;
        else
          return;
        if (t) {
          var a = F(r);
          nr(t, e.props, "prop", a, e);
        } else if (r.PropTypes !== void 0 && !Re) {
          Re = !0;
          var f = F(r);
          y("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", f || "Unknown");
        }
        typeof r.getDefaultProps == "function" && !r.getDefaultProps.isReactClassApproved && y("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function hr(e) {
      {
        for (var r = Object.keys(e.props), t = 0; t < r.length; t++) {
          var a = r[t];
          if (a !== "children" && a !== "key") {
            H(e), y("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", a), H(null);
            break;
          }
        }
        e.ref !== null && (H(e), y("Invalid attribute `ref` supplied to `React.Fragment`."), H(null));
      }
    }
    function Ge(e, r, t, a, f, v) {
      {
        var s = p(e);
        if (!s) {
          var u = "";
          (e === void 0 || typeof e == "object" && e !== null && Object.keys(e).length === 0) && (u += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var _ = mr(f);
          _ ? u += _ : u += Me();
          var h;
          e === null ? h = "null" : he(e) ? h = "array" : e !== void 0 && e.$$typeof === i ? (h = "<" + (F(e.type) || "Unknown") + " />", u = " Did you accidentally export a JSX literal instead of a component?") : h = typeof e, y("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", h, u);
        }
        var b = pr(e, r, t, f, v);
        if (b == null)
          return b;
        if (s) {
          var O = r.children;
          if (O !== void 0)
            if (a)
              if (he(O)) {
                for (var q = 0; q < O.length; q++)
                  Ne(O[q], e);
                Object.freeze && Object.freeze(O);
              } else
                y("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              Ne(O, e);
        }
        return e === c ? hr(b) : yr(b), b;
      }
    }
    function xr(e, r, t) {
      return Ge(e, r, t, !0);
    }
    function br(e, r, t) {
      return Ge(e, r, t, !1);
    }
    var Rr = br, wr = xr;
    re.Fragment = c, re.jsx = Rr, re.jsxs = wr;
  }()), re;
}
process.env.NODE_ENV === "production" ? _e.exports = jr() : _e.exports = Vr();
var X = _e.exports;
const ce = (l) => {
  const i = new Dr(l);
  return new Ee(i.r, i.g, i.b);
};
var Ur = `uniform sampler2D tFluid;

uniform vec3 uColor;
uniform vec3 uBackgroundColor;

uniform float uDistort;
uniform float uIntensity;
uniform float uRainbow;
uniform float uBlend;
uniform float uShowBackground;

void mainImage(const in vec4 inputColor, const in vec2 uv, out vec4 outputColor) {

    vec3 fluidColor = texture2D(tFluid, uv).rgb;

    vec2 distortedUv = uv - fluidColor.rg * uDistort;

    vec4 texture = texture2D(inputBuffer, distortedUv);

    float intensity = length(fluidColor) * uIntensity;

    vec3 selectedColor = uColor * length(fluidColor);

    vec4 colorForFluidEffect = vec4(uRainbow == 1.0 ? fluidColor : selectedColor, 1.0);

    vec4 computedBgColor = vec4(uBackgroundColor, 1.);

    if(uShowBackground == 0.0) {
        outputColor = mix(texture, colorForFluidEffect, intensity);
        return;
    }

    vec4 computedFluidColor = mix(texture, colorForFluidEffect, uBlend);

    vec4 finalColor;

    if(texture.a < 0.1) {
        finalColor = mix(computedBgColor, colorForFluidEffect, intensity);
    } else {
        finalColor = mix(computedFluidColor, computedBgColor, 1.0 - texture.a);
    }

    outputColor = finalColor;
}`;
class Lr extends Or {
  constructor(n = {}) {
    const c = {
      tFluid: new Y(n.tFluid),
      uDistort: new Y(n.distortion),
      uRainbow: new Y(n.rainbow),
      uIntensity: new Y(n.intensity),
      uBlend: new Y(n.blend),
      uShowBackground: new Y(n.showBackground),
      uColor: new Y(ce(n.fluidColor)),
      uBackgroundColor: new Y(ce(n.backgroundColor))
    };
    super("FluidEffect", Ur, { uniforms: new Map(Object.entries(c)) });
    qe(this, "state");
    this.state = {
      ...n
    };
  }
  updateUniform(n, c) {
    const m = this.uniforms.get(n);
    m && (m.value = c);
  }
  update() {
    this.updateUniform("uIntensity", this.state.intensity), this.updateUniform("uDistort", this.state.distortion), this.updateUniform("uRainbow", this.state.rainbow), this.updateUniform("uBlend", this.state.blend), this.updateUniform("uShowBackground", this.state.showBackground), this.updateUniform("uColor", ce(this.state.fluidColor)), this.updateUniform("uBackgroundColor", ce(this.state.backgroundColor));
  }
}
const Ar = Tr(function(i, n) {
  const c = te(() => new Lr(i), [i]);
  return Te(() => () => {
    c && c.dispose();
  }, [c]), /* @__PURE__ */ X.jsx("primitive", { ref: n, object: c });
}), Ce = (l, i, n) => {
  const c = de(l, i, n), m = de(l, i, n), R = J({
    read: c,
    write: m,
    swap: () => {
      const d = R.read;
      R.read = R.write, R.write = d;
    },
    dispose: () => {
      c.dispose(), m.dispose();
    }
  }).current;
  return R;
}, o = {
  blend: 5,
  intensity: 2,
  force: 1.1,
  distortion: 0.4,
  curl: 1.9,
  radius: 0.3,
  swirl: 4,
  pressure: 0.8,
  densityDissipation: 0.96,
  velocityDissipation: 1,
  fluidColor: "#3300ff",
  backgroundColor: "#070410",
  showBackground: !0,
  rainbow: !1,
  dyeRes: 512,
  simRes: 128
}, Ir = () => {
  const l = Ce(o.dyeRes, o.dyeRes, {
    type: T.HalfFloatType,
    format: T.RGBAFormat,
    minFilter: T.LinearFilter,
    depth: !1
  }), i = Ce(o.simRes, o.simRes, {
    type: T.HalfFloatType,
    format: T.RGFormat,
    minFilter: T.LinearFilter,
    depth: !1
  }), n = Ce(o.simRes, o.simRes, {
    type: T.HalfFloatType,
    format: T.RedFormat,
    minFilter: T.NearestFilter,
    depth: !1
  }), c = de(o.simRes, o.simRes, {
    type: T.HalfFloatType,
    format: T.RedFormat,
    minFilter: T.NearestFilter,
    depth: !1
  }), m = de(o.simRes, o.simRes, {
    type: T.HalfFloatType,
    format: T.RedFormat,
    minFilter: T.NearestFilter,
    depth: !1
  }), R = te(() => ({
    density: l,
    velocity: i,
    pressure: n,
    divergence: c,
    curl: m
  }), [m, l, c, n, i]);
  return Te(() => () => {
    for (const d of Object.values(R))
      d.dispose();
  }, [R]), R;
};
var zr = `varying vec2 vUv;
varying vec2 vL;
varying vec2 vR;
varying vec2 vT;
varying vec2 vB;
uniform vec2 texelSize;

void main() {
  vUv = uv;

  vL = vUv - vec2(texelSize.x, 0.0);

  vR = vUv + vec2(texelSize.x, 0.0);

  vT = vUv + vec2(0.0, texelSize.y);

  vB = vUv - vec2(0.0, texelSize.y);

  gl_Position = vec4(position, 1.0);
}`, Yr = `precision highp float;

varying vec2 vUv;
uniform sampler2D uTexture;
uniform float uClearValue;

void main() { gl_FragColor = uClearValue * texture2D(uTexture, vUv); }`, Mr = `precision highp float;

varying vec2 vUv;
varying vec2 vL;
varying vec2 vR;
varying vec2 vT;
varying vec2 vB;

uniform sampler2D uVelocity;

void main() {
    float L = texture2D(uVelocity, vL).y;

    float R = texture2D(uVelocity, vR).y;

    float T = texture2D(uVelocity, vT).x;

    float B = texture2D(uVelocity, vB).x;

    float vorticity = R - L - T + B;

    gl_FragColor = vec4(vorticity, 0.0, 0.0, 1.0);
}`, $r = `precision highp float;

varying highp vec2 vUv;
varying highp vec2 vL;
varying highp vec2 vR;
varying highp vec2 vT;
varying highp vec2 vB;

uniform sampler2D uVelocity;

void main() {
    float L = texture2D(uVelocity, vL).x;

    float R = texture2D(uVelocity, vR).x;

    float T = texture2D(uVelocity, vT).y;

    float B = texture2D(uVelocity, vB).y;

    vec2 C = texture2D(uVelocity, vUv).xy;

    if(vL.x < 0.0) {
        L = -C.x;
    }

    if(vR.x > 1.0) {
        R = -C.x;
    }

    if(vT.y > 1.0) {
        T = -C.y;
    }

    if(vB.y < 0.0) {
        B = -C.y;
    }

    float div = 0.5 * (R - L + T - B);

    gl_FragColor = vec4(div, 0.0, 0.0, 1.0);
}`, Wr = `precision highp float;

varying highp vec2 vUv;
varying highp vec2 vL;
varying highp vec2 vR;
varying highp vec2 vT;
varying highp vec2 vB;

uniform sampler2D uPressure;
uniform sampler2D uVelocity;

void main() {
    float L = texture2D(uPressure, vL).x;

    float R = texture2D(uPressure, vR).x;

    float T = texture2D(uPressure, vT).x;

    float B = texture2D(uPressure, vB).x;

    vec2 velocity = texture2D(uVelocity, vUv).xy;

    velocity.xy -= vec2(R - L, T - B);

    gl_FragColor = vec4(velocity, 0.0, 1.0);
}`, Nr = `precision highp float;

varying highp vec2 vUv;
varying highp vec2 vL;
varying highp vec2 vR;
varying highp vec2 vT;
varying highp vec2 vB;

uniform sampler2D uPressure;
uniform sampler2D uDivergence;

void main() {
    float L = texture2D(uPressure, vL).x;

    float R = texture2D(uPressure, vR).x;

    float T = texture2D(uPressure, vT).x;

    float B = texture2D(uPressure, vB).x;

    float C = texture2D(uPressure, vUv).x;

    float divergence = texture2D(uDivergence, vUv).x;

    float pressure = (L + R + B + T - divergence) * 0.25;

    gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);
}`, Gr = `varying vec2 vUv;

uniform sampler2D uTarget;
uniform float aspectRatio;
uniform vec3 uColor;
uniform vec2 uPointer;
uniform float uRadius;

void main() {
    vec2 p = vUv - uPointer.xy;

    p.x *= aspectRatio;

    vec3 splat = exp(-dot(p, p) / uRadius) * uColor;

    vec3 base = texture2D(uTarget, vUv).xyz;

    gl_FragColor = vec4(base + splat, 1.0);
}`, Hr = `precision highp float;

varying vec2 vUv;
uniform sampler2D uVelocity;
uniform sampler2D uSource;
uniform vec2 texelSize;
uniform float dt;
uniform float uDissipation;

void main() {
    vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;

    gl_FragColor = uDissipation * texture2D(uSource, coord);

    gl_FragColor.a = 1.0;
}`, qr = `precision highp float;

varying vec2 vUv;
varying vec2 vL;
varying vec2 vR;
varying vec2 vT;
varying vec2 vB;

uniform sampler2D uVelocity;
uniform sampler2D uCurl;
uniform float uCurlValue;
uniform float dt;

void main() {
    float L = texture2D(uCurl, vL).x;

    float R = texture2D(uCurl, vR).x;

    float T = texture2D(uCurl, vT).x;

    float B = texture2D(uCurl, vB).x;

    float C = texture2D(uCurl, vUv).x;

    vec2 force = vec2(abs(T) - abs(B), abs(R) - abs(L)) * 0.5;

    force /= length(force) + 1.;

    force *= uCurlValue * C;

    force.y *= -1.;

    vec2 vel = texture2D(uVelocity, vUv).xy;

    gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);
}`;
const Xr = () => {
  const l = ve((n) => n.size), i = te(() => {
    const n = new M({
      uniforms: {
        uVelocity: {
          value: new k()
        },
        uSource: {
          value: new k()
        },
        dt: {
          value: 0.016
        },
        uDissipation: {
          value: 1
        },
        texelSize: { value: new j() }
      },
      fragmentShader: Hr
    }), c = new M({
      uniforms: {
        uTexture: {
          value: new k()
        },
        uClearValue: {
          value: o.pressure
        },
        texelSize: {
          value: new j()
        }
      },
      fragmentShader: Yr
    }), m = new M({
      uniforms: {
        uVelocity: {
          value: new k()
        },
        texelSize: {
          value: new j()
        }
      },
      fragmentShader: Mr
    }), R = new M({
      uniforms: {
        uVelocity: {
          value: new k()
        },
        texelSize: {
          value: new j()
        }
      },
      fragmentShader: $r
    }), d = new M({
      uniforms: {
        uPressure: {
          value: new k()
        },
        uVelocity: {
          value: new k()
        },
        texelSize: {
          value: new j()
        }
      },
      fragmentShader: Wr
    }), S = new M({
      uniforms: {
        uPressure: {
          value: new k()
        },
        uDivergence: {
          value: new k()
        },
        texelSize: {
          value: new j()
        }
      },
      fragmentShader: Nr
    }), g = new M({
      uniforms: {
        uTarget: {
          value: new k()
        },
        aspectRatio: {
          value: l.width / l.height
        },
        uColor: {
          value: new Ee()
        },
        uPointer: {
          value: new j()
        },
        uRadius: {
          value: o.radius / 100
        },
        texelSize: {
          value: new j()
        }
      },
      fragmentShader: Gr
    }), V = new M({
      uniforms: {
        uVelocity: {
          value: new k()
        },
        uCurl: {
          value: new k()
        },
        uCurlValue: {
          value: o.curl
        },
        dt: {
          value: 0.016
        },
        texelSize: {
          value: new j()
        }
      },
      fragmentShader: qr
    });
    return {
      splat: g,
      curl: m,
      clear: c,
      divergence: R,
      pressure: S,
      gradientSubstract: d,
      advection: n,
      vorticity: V
    };
  }, [l]);
  return Te(() => {
    for (const n of Object.values(i)) {
      const c = l.width / (l.height + 400);
      n.uniforms.texelSize.value.set(1 / (o.simRes * c), 1 / o.simRes), n.vertexShader = zr, n.depthTest = !1, n.depthWrite = !1;
    }
    return () => {
      for (const n of Object.values(i))
        n.dispose();
    };
  }, [i, l]), i;
}, Jr = ({ force: l }) => {
  const i = ve((d) => d.size), n = J([]).current, c = J(new j()), m = J(!1);
  return { onPointerMove: fe(
    (d) => {
      const S = d.x - c.current.x, g = d.y - c.current.y;
      m.current || (m.current = !0, c.current.set(d.x, d.y)), c.current.set(d.x, d.y), m.current && n.push({
        mouseX: d.x / i.width,
        mouseY: 1 - d.y / i.height,
        velocityX: S * l,
        velocityY: -g * l
      });
    },
    [l, i.height, i.width, n]
  ), splatStack: n };
}, at = ({
  blend: l = o.blend,
  force: i = o.force,
  radius: n = o.radius,
  curl: c = o.curl,
  swirl: m = o.swirl,
  intensity: R = o.intensity,
  distortion: d = o.distortion,
  fluidColor: S = o.fluidColor,
  backgroundColor: g = o.backgroundColor,
  showBackground: V = o.showBackground,
  rainbow: C = o.rainbow,
  pressure: B = o.pressure,
  densityDissipation: A = o.densityDissipation,
  velocityDissipation: W = o.velocityDissipation
}) => {
  const K = ve((E) => E.size), I = ve((E) => E.gl), N = te(() => new Fr(), []), U = te(() => new Pr(), []), y = J(null), ne = J(null), x = Ir(), G = Xr(), { onPointerMove: pe, splatStack: Z } = Jr({ force: i }), L = fe(
    (E) => {
      y.current && (y.current.material = G[E], y.current.material.needsUpdate = !0);
    },
    [G]
  ), D = fe(
    (E) => {
      const w = x[E];
      "write" in w ? (I.setRenderTarget(w.write), I.clear(), I.render(N, U), w.swap()) : (I.setRenderTarget(w), I.clear(), I.render(N, U));
    },
    [U, N, x, I]
  ), p = fe(
    (E, w, F) => {
      const P = G[E];
      P && P.uniforms[w] && (P.uniforms[w].value = F);
    },
    [G]
  );
  return Er(({ gl: E }) => {
    if (!(!y.current || !ne.current)) {
      for (let w = Z.length - 1; w >= 0; w--) {
        const { mouseX: F, mouseY: P, velocityX: $, velocityY: ae } = Z[w];
        L("splat"), p("splat", "uTarget", x.velocity.read.texture), p("splat", "uPointer", new j(F, P)), p("splat", "uColor", new Ee($, ae, 10)), p("splat", "uRadius", n / 100), D("velocity"), p("splat", "uTarget", x.density.read.texture), D("density"), Z.pop();
      }
      L("curl"), p("curl", "uVelocity", x.velocity.read.texture), D("curl"), L("vorticity"), p("vorticity", "uVelocity", x.velocity.read.texture), p("vorticity", "uCurl", x.curl.texture), p("vorticity", "uCurlValue", c), D("velocity"), L("divergence"), p("divergence", "uVelocity", x.velocity.read.texture), D("divergence"), L("clear"), p("clear", "uTexture", x.pressure.read.texture), p("clear", "uClearValue", B), D("pressure"), L("pressure"), p("pressure", "uDivergence", x.divergence.texture);
      for (let w = 0; w < m; w++)
        p("pressure", "uPressure", x.pressure.read.texture), D("pressure");
      L("gradientSubstract"), p("gradientSubstract", "uPressure", x.pressure.read.texture), p("gradientSubstract", "uVelocity", x.velocity.read.texture), D("velocity"), L("advection"), p("advection", "uVelocity", x.velocity.read.texture), p("advection", "uSource", x.velocity.read.texture), p("advection", "uDissipation", W), D("velocity"), p("advection", "uVelocity", x.velocity.read.texture), p("advection", "uSource", x.density.read.texture), p("advection", "uDissipation", A), D("density"), E.setRenderTarget(null), E.clear();
    }
  }), /* @__PURE__ */ X.jsxs(X.Fragment, { children: [
    Sr(
      /* @__PURE__ */ X.jsx(
        "mesh",
        {
          ref: y,
          onPointerMove: pe,
          scale: [K.width, K.height, 1],
          children: /* @__PURE__ */ X.jsx("planeGeometry", { args: [2, 2, 10, 10] })
        }
      ),
      N
    ),
    /* @__PURE__ */ X.jsx(
      Ar,
      {
        intensity: R * 1e-4,
        rainbow: C,
        distortion: d * 1e-3,
        backgroundColor: g,
        blend: l * 0.01,
        fluidColor: S,
        showBackground: V,
        ref: ne,
        tFluid: x.density.read.texture
      }
    )
  ] });
}, ot = () => {
  const [l, i] = kr("Settings", () => ({
    intensity: {
      value: o.intensity,
      min: 0,
      max: 10,
      step: 0.01,
      label: "intensity"
    },
    force: {
      value: o.force,
      min: 0,
      max: 20,
      step: 0.1,
      label: "force"
    },
    distortion: {
      value: o.distortion,
      min: 0,
      max: 2,
      step: 0.01,
      label: "distortion"
    },
    curl: {
      value: o.curl,
      min: 0,
      max: 50,
      step: 0.1,
      label: "curl"
    },
    swirl: {
      value: o.swirl,
      min: 0,
      max: 20,
      step: 1,
      label: "swirl"
    },
    fluidColor: {
      value: o.fluidColor,
      label: "fluid color"
    },
    backgroundColor: {
      value: o.backgroundColor,
      label: "background color"
    },
    blend: {
      value: o.blend,
      min: 0,
      max: 10,
      step: 0.01,
      label: "blend"
    },
    showBackground: {
      value: o.showBackground,
      label: "show background"
    },
    rainbow: {
      value: o.rainbow,
      label: "rainbow mode"
    },
    pressure: {
      value: o.pressure,
      min: 0,
      max: 1,
      step: 0.01,
      label: "pressure reduction"
    },
    densityDissipation: {
      value: o.densityDissipation,
      min: 0,
      max: 1,
      step: 0.01,
      label: "density dissipation"
    },
    velocityDissipation: {
      value: o.velocityDissipation,
      min: 0,
      max: 1,
      step: 0.01,
      label: "velocity dissipation"
    },
    radius: {
      value: o.radius,
      min: 0.01,
      max: 1,
      step: 0.01,
      label: "radius"
    },
    "reset OPTS": Br(() => {
      i({ ...o });
    })
  }));
  return l;
};
export {
  at as Fluid,
  ot as useConfig
};
//# sourceMappingURL=index.es.js.map
